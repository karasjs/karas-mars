{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { loadSceneAsync, MarsPlayer, RI } from '@alipay/mars-player';\nimport { version } from '../package.json';\n// const { loadSceneAsync, MarsPlayer, RI } = window.Mars;\n\nconst {\n  refresh: {\n    level: {\n      CACHE,\n    },\n    webgl: {\n      drawTextureCache,\n    },\n  },\n  math: {\n    matrix: {\n      calRectPoint,\n    },\n  },\n  util: {\n    isNil,\n  },\n  mode: {\n    CANVAS,\n    WEBGL,\n  },\n  inject,\n} = karas;\n\nconst r2d = 180 / Math.PI;\n\nconst vertexSimple = `\nprecision lowp float;\nattribute vec2 aPos;\nvoid main(){ gl_Position = vec4(aPos,.0,1.);}\n`;\nconst fragmentSimple = `\nprecision lowp float;\nvoid main(){ gl_FragColor = vec4(1.);}\n`;\n\nfunction mapRange(p, min, max) {\n  return p === 0 ? 0 : min + (max - min) * p;\n}\n\nclass $ extends karas.Geom {\n  scene = null;\n  playOptions = null;\n  mp = null;\n  timeDelta = 0;\n  playbackRate = 1;\n\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode, ctx, dx, dy) {\n    let res = super.render(renderMode, ctx, dx, dy);\n    if(res.break) {\n      return res;\n    }\n    let root = this.__root;\n    if(renderMode !== root.__renderMode || renderMode !== WEBGL) {\n      return res;\n    }\n    let scene = this.scene;\n    let gl = ctx;\n    if(scene) {\n      let mp = this.mp;\n      if(!mp) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        mp = this.mp = new MarsPlayer({\n          gl,\n          manualRender: true,\n        });\n        this.gpu = mp.renderer.gpu;\n        this.renderState = mp.renderer.internal.state;\n        this.defaultMtl = new RI.Material({\n          name: 'defMtl',\n          shader: {\n            vertex: vertexSimple,\n            fragment: fragmentSimple,\n            shared: true,\n          },\n          states: {\n            blending: true,\n            blendSrc: gl.ONE,\n            blendSrcAlpha: gl.ONE,\n            blendDst: gl.ONE_MINUS_SRC_ALPHA,\n            blendDstAlpha: gl.ONE_MINUS_SRC_ALPHA,\n            depthMask: true,\n            depthTest: false,\n            cullFaceEnabled: false,\n            frontFace: gl.CCW,\n            stencilTest: false,\n            polygonOffsetFill: false,\n            polygonOffset: [1, 0],\n          },\n        }).assignRenderer(mp.renderer);\n        this.renderState.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.renderState.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n        this.renderState.noCache = true;\n\n        if(!this.host.blend) {\n          this.renderState.disable(RI.constants.BLEND);\n        }\n        let flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n        let premultiply = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n        let program = gl.getParameter(gl.CURRENT_PROGRAM);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        let activeTexIndex = gl.getParameter(gl.ACTIVE_TEXTURE);\n        let originTexture = gl.getParameter(gl.TEXTURE_BINDING_2D);\n\n        let composition = this.composition = mp.initializeComposition(scene, {\n          onEnd: () => {},\n          keepResource: false,\n          willReverseTime: false,\n          ...this.playOptions,\n        });\n        let onComp = () => {\n          composition.start();\n          if (originTexture) {\n            gl.bindTexture(gl.TEXTURE_2D, originTexture);\n          }\n          gl.activeTexture(activeTexIndex);\n          composition.camera = {\n            aspect: this.width / this.height,\n          };\n          this.renderState.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiply);\n          this.renderState.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n          this.renderState.useProgram(null);\n          gl.useProgram(program);\n          scene.textures = void 0;\n        };\n        onComp();\n      }\n      let comp = this.composition;\n      let renderer = comp && comp.renderer;\n      if(renderer && !renderer.isDestroyed && !mp.paused) {\n        this._updateTransform();\n        this._updateComposition();\n        let bit = RI.constants.STENCIL_BUFFER_BIT;\n        if(this.host.clearDepth) {\n          bit = bit | RI.constants.DEPTH_BUFFER_BIT;\n        }\n        this.renderState.clear(bit);\n        comp.renderFrame.render();\n      }\n      this._reset(ctx);\n    }\n  }\n\n  _updateTransform() {\n    let parent = this.domParent;\n    let comp = this.composition;\n    let point = this.project3DPoint(comp.camera);\n    let scaleX = parent.getStyle('scaleX'),\n      scaleY = parent.getStyle('scaleY'),\n      rotateZ = parent.getStyle('rotateZ');\n    let env = this.env;\n    comp.rootTransform.setTransform({\n      // position: point,\n      scale: [scaleX, scaleY, 1],\n      // rotation: [0, 0, rotateZ],\n    });\n  }\n\n  _updateComposition() {\n    let comp = this.composition;\n    if(comp.shouldRestart) {\n      comp.restart();\n      comp.tick(0);\n    }\n    else if(!comp.shouldDestroy) {\n      let dt = Math.min(this.timeDelta || 0, 33) * this.playbackRate;\n      comp.tick(dt);\n    }\n  }\n\n  _reset(gl) {\n    gl.useProgram(gl.program);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    this.aliasRenderState();\n  }\n\n  aliasRenderState() {\n    let mtl = this.defaultMtl.materialInternal;\n    if(mtl && mtl.renderer.state) {\n      let marsRenderState = this.renderState;\n      marsRenderState._reset();\n      mtl.setupStates();\n      delete marsRenderState._dict[RI.constants.BLEND];\n      marsRenderState.depthMask(false);\n      marsRenderState.activeTexture(RI.constants.TEXTURE0);\n    }\n  }\n\n  project3DPoint(camera, z = 0) {\n    let parent = this.domParent;\n    let x1 = this.x, y1 = this.y,\n      translateX = parent.getStyle('translateX'),\n      translateY = parent.getStyle('translateY');\n    let pos = camera.position;\n    let pw = this.width, ph = this.height;\n    let fov = Math.tan(camera.fov / r2d / 2);\n    let depth = pos[2] - z;\n    let width, height;\n    if(camera.clipMode) {\n      width = fov * depth;\n      height = width * ph / pw;\n    }\n    else {\n      height = fov * depth;\n      width = height * pw / ph;\n    }\n    let x = (x1 + translateX) / pw;\n    let y = (y1 + translateY) / ph;\n    return [mapRange(x, -width, width) + pos[0], mapRange(y, -height, height) + pos[1], z];\n  }\n}\n\nclass Mars extends karas.Component {\n  isPlay = false;\n  isLoaded = false;\n  __playbackRate = 1;\n  clearDepth = false;\n  blend = false;\n\n  constructor(props) {\n    super(props);\n    this.isPlay = props.autoPlay !== false;\n    this.__playbackRate = props.playbackRate ?? 1;\n    this.clearDepth = !!props.clearDepth;\n    this.blend = !!props.blend;\n  }\n\n  componentDidMount() {\n    this.load();\n\n    let { autoPlay = true } = this.props;\n    this.cb = timeDelta => {\n      fake.timeDelta = timeDelta;\n      if(this.isPlay && this.isLoaded) {\n        fake.refresh();\n      }\n    }\n    let fake = this.ref.fake;\n    fake.playbackRate = this.__playbackRate;\n    if(autoPlay) {\n      fake.frameAnimate(this.cb);\n    }\n  }\n\n  componentWillUnmount() {\n    const mp = this.ref.fake.mp;\n    mp && mp.destroy(true);\n  }\n\n  load() {\n    let url = this.props.url;\n    if(!url) {\n      return;\n    }\n    let request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'json';\n    request.onload = () => {\n      if(request.response) {\n        this.isLoaded = true;\n        let json = request.response;\n        loadSceneAsync(json, {\n          ...this.props?.loadOptions\n        }).then(scene => {\n          this.props.onLoad?.();\n          this.playAnimation(scene);\n        });\n      }\n    };\n    request.send();\n  }\n\n  playAnimation(scene) {\n    let fake = this.ref.fake;\n    fake.scene = scene;\n    fake.playOptions = this.props?.playOptions;\n    // 第一帧强制显示\n    fake.refresh();\n  }\n\n  render() {\n    return <div>\n      <$ ref=\"fake\" style={{\n        width: '100%',\n        height: '100%',\n        fill: 'none',\n        stroke: 0,\n      }}/>\n    </div>;\n  }\n\n  play(start) {\n    const cb = () => {\n      let comp = this.ref.fake.composition;\n      if (comp) {\n        this.ref.fake.removeFrameAnimate(cb);\n        this.pause();\n        comp.restart();\n        comp.tick(start ?? 0);\n        this.resume();\n      }\n    }\n    this.ref.fake.frameAnimate(cb);\n  }\n\n  pause() {\n    this.ref.fake.removeFrameAnimate(this.cb);\n  }\n\n  resume() {\n    this.ref.fake.frameAnimate(this.cb);\n  }\n\n  get playbackRate() {\n    return this.__playbackRate;\n  }\n\n  set playbackRate(v) {\n    v = parseFloat(v) ?? 1;\n    // if(v <= 0) {\n    //   v = 1;\n    // }\n    this.__playbackRate = v;\n    if (this.ref.fake) {\n      this.ref.fake.playbackRate = v;\n    }\n  }\n}\n\nMars.version = version;\n\nexport default Mars;\n"],"names":["_karas$refresh","karas","refresh","CACHE","level","drawTextureCache","webgl","calRectPoint","math","matrix","isNil","util","_karas$mode","mode","CANVAS","WEBGL","inject","r2d","Math","PI","vertexSimple","fragmentSimple","mapRange","p","min","max","$","_karas$Geom","_inherits","tagName","props","_this","call","_defineProperty","_assertThisInitialized","_createClass","key","value","render","renderMode","ctx","dx","dy","_this2","res","_get","_getPrototypeOf","prototype","root","__root","__renderMode","scene","gl","mp","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","MarsPlayer","manualRender","gpu","renderer","renderState","internal","state","defaultMtl","RI","Material","name","shader","vertex","fragment","shared","states","blending","blendSrc","ONE","blendSrcAlpha","blendDst","ONE_MINUS_SRC_ALPHA","blendDstAlpha","depthMask","depthTest","cullFaceEnabled","frontFace","CCW","stencilTest","polygonOffsetFill","polygonOffset","assignRenderer","bindFramebuffer","FRAMEBUFFER","noCache","host","blend","disable","constants","BLEND","flipY","getParameter","UNPACK_FLIP_Y_WEBGL","premultiply","program","CURRENT_PROGRAM","activeTexIndex","ACTIVE_TEXTURE","originTexture","TEXTURE_BINDING_2D","composition","initializeComposition","_objectSpread","onEnd","keepResource","willReverseTime","playOptions","onComp","start","bindTexture","TEXTURE_2D","activeTexture","camera","aspect","width","height","useProgram","textures","comp","isDestroyed","paused","_updateTransform","_updateComposition","bit","STENCIL_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clear","renderFrame","_reset","parent","domParent","project3DPoint","scaleX","getStyle","scaleY","rotateZ","env","rootTransform","setTransform","scale","shouldRestart","restart","tick","shouldDestroy","dt","timeDelta","playbackRate","enable","blendFunc","aliasRenderState","mtl","materialInternal","marsRenderState","setupStates","_dict","TEXTURE0","z","arguments","length","undefined","x1","x","y1","y","translateX","translateY","pos","position","pw","ph","fov","tan","depth","clipMode","Geom","Mars","_karas$Component","_props$playbackRate","_this3","isPlay","autoPlay","__playbackRate","componentDidMount","_this4","load","_this$props$autoPlay","cb","fake","isLoaded","ref","frameAnimate","componentWillUnmount","destroy","_this5","url","request","XMLHttpRequest","open","responseType","onload","response","_this5$props","json","loadSceneAsync","loadOptions","then","_this5$props$onLoad","_this5$props2","onLoad","playAnimation","send","_this$props","createElement","style","fill","stroke","play","_this6","removeFrameAnimate","pause","resume","get","set","v","_parseFloat","parseFloat","Component","version"],"mappings":"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"}