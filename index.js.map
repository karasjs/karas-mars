{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\n// import {  MarsPlayer,AssetManager,Material,glContext,Composition } from '@galacean/mars-player';\nimport { version } from '../package.json';\nconst {  MarsPlayer,AssetManager,Material,glContext,Composition } = window.mars;\n\nconst {\n  refresh: {\n    level: {\n      CACHE,\n    },\n    webgl: {\n      drawTextureCache,\n    },\n  },\n  math: {\n    matrix: {\n      calRectPoint,\n    },\n  },\n  util: {\n    isNil,\n  },\n  mode: {\n    CANVAS,\n    WEBGL,\n  },\n  inject,\n} = karas;\n\nconst r2d = 180 / Math.PI;\n\nconst vertexSimple = `\nprecision lowp float;\nattribute vec2 aPos;\nvoid main(){ gl_Position = vec4(aPos,.0,1.);}\n`;\nconst fragmentSimple = `\nprecision lowp float;\nvoid main(){ gl_FragColor = vec4(1.);}\n`;\n\nfunction mapRange(p, min, max) {\n  return p === 0 ? 0 : min + (max - min) * p;\n}\n\nclass $ extends karas.Geom {\n  scene = null;\n  playOptions = null;\n  mp = null;\n  timeDelta = 0;\n  playbackRate = 1;\n\n  constructor(tagName, props) {\n    super(tagName, props);\n  }\n\n  render(renderMode, ctx, dx, dy) {\n    let res = super.render(renderMode, ctx, dx, dy);\n    if(res.break) {\n      return res;\n    }\n    let root = this.__root;\n    if(renderMode !== root.__renderMode || renderMode !== WEBGL) {\n      return res;\n    }\n    let scene = this.scene;\n    let gl = ctx;\n    if(scene) {\n      let mp = this.mp;\n      if(!mp) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        mp = this.mp = new MarsPlayer({\n          gl,\n          manualRender: true,\n        });\n        this.gpu = mp.gpuCapability;\n        this.renderState = mp.renderer.pipelineContext.gl;\n        this.defaultMtl = Material.create({\n          name: 'defMtl',\n          shader: {\n            vertex: vertexSimple,\n            fragment: fragmentSimple,\n          }\n        });\n        this.defaultMtl.blending = true;\n        this.defaultMtl.blendFunction = [gl.ONE,gl.ONE_MINUS_SRC_ALPHA,gl.ONE,gl.ONE_MINUS_SRC_ALPHA];\n        this.defaultMtl.depthMask = true;\n        this.defaultMtl.depthTest = true;\n        this.defaultMtl.culling = false;\n        this.defaultMtl.cullFace = gl.CCW;\n        this.defaultMtl.stencilTest = false;\n        this.defaultMtl.polygonOffsetFill = false;\n        this.defaultMtl.polygonOffset = [1, 0];\n\n        this.renderState.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.renderState.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n        if(!this.host.blend) {\n          this.renderState.disable(glContext.BLEND);\n        }\n        let flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n        let premultiply = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n        let program = gl.getParameter(gl.CURRENT_PROGRAM);\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        let activeTexIndex = gl.getParameter(gl.ACTIVE_TEXTURE);\n        let originTexture = gl.getParameter(gl.TEXTURE_BINDING_2D);\n        const renderer = mp.renderer;\n        let composition = this.composition = Composition.initialize(scene, {\n          handleEnd: () => {},\n          keepResource: false,\n          willReverseTime: false,\n          ...this.playOptions,\n          renderer,\n          width: renderer.getWidth(),\n          height: renderer.getHeight(),\n          shaderLibrary: renderer.getShaderLibrary(),\n        });\n        let onComp = () => {\n          composition.start();\n          if (originTexture) {\n            gl.bindTexture(gl.TEXTURE_2D, originTexture);\n          }\n          gl.activeTexture(activeTexIndex);\n          this.renderState.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiply);\n          this.renderState.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n          this.renderState.useProgram(null);\n          gl.useProgram(program);\n          scene.textures = void 0;\n        };\n        onComp();\n      }\n      let comp = this.composition;\n      let renderer = comp && comp.renderer;\n      if(renderer && !renderer.isDestroyed && !mp.paused) {\n        this._updateTransform();\n        this._updateComposition();\n        let bit = glContext.STENCIL_BUFFER_BIT;\n        if(this.host.clearDepth) {\n          bit = bit | glContext.DEPTH_BUFFER_BIT;\n        }\n        this.renderState.clear(bit);\n        renderer.renderRenderFrame(comp.renderFrame)\n      }\n      this._reset(ctx);\n    }\n  }\n\n  _updateTransform() {\n    let parent = this.domParent;\n    let comp = this.composition;\n    let point = this.project3DPoint(comp.camera);\n    let scaleX = parent.getStyle('scaleX'),\n      scaleY = parent.getStyle('scaleY'),\n      rotateZ = parent.getStyle('rotateZ');\n    let env = this.env;\n    comp.rootTransform.setTransform({\n      // position: point,\n      scale: [scaleX, scaleY, 1],\n      // rotation: [0, 0, rotateZ],\n    });\n  }\n\n  _updateComposition() {\n    let comp = this.composition;\n    if(comp.shouldRestart()) {\n      comp.restart();\n      comp.update(0);\n    }\n    else if(!comp.shouldDestroy) {\n      let dt = Math.min(this.timeDelta || 0, 33) * this.playbackRate;\n      comp.update(dt);\n    }\n  }\n\n  _reset(gl) {\n    gl.useProgram(gl.program);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    this.aliasRenderState();\n  }\n\n  aliasRenderState() {\n    let mtl = this.defaultMtl;\n    let marsRenderState = this.mp.renderer.pipelineContext;\n\n    if(mtl && marsRenderState) {\n      marsRenderState.reset();\n      mtl.setupStates(marsRenderState);\n      delete marsRenderState.glCapabilityCache[glContext.BLEND];\n      marsRenderState.depthMask(false);\n      marsRenderState.activeTexture(glContext.TEXTURE0);\n    }\n  }\n\n  project3DPoint(camera, z = 0) {\n    let parent = this.domParent;\n    let x1 = this.x, y1 = this.y,\n      translateX = parent.getStyle('translateX'),\n      translateY = parent.getStyle('translateY');\n    let pos = camera.position;\n    let pw = this.width, ph = this.height;\n    let fov = Math.tan(camera.fov / r2d / 2);\n    let depth = pos[2] - z;\n    let width, height;\n    if(camera.clipMode) {\n      width = fov * depth;\n      height = width * ph / pw;\n    }\n    else {\n      height = fov * depth;\n      width = height * pw / ph;\n    }\n    let x = (x1 + translateX) / pw;\n    let y = (y1 + translateY) / ph;\n    return [mapRange(x, -width, width) + pos[0], mapRange(y, -height, height) + pos[1], z];\n  }\n}\n\nclass Mars extends karas.Component {\n  isPlay = false;\n  isLoaded = false;\n  __playbackRate = 1;\n  clearDepth = false;\n  blend = false;\n\n  constructor(props) {\n    super(props);\n\n    this.isPlay = props.autoPlay !== false;\n    this.__playbackRate = props.playbackRate ?? 1;\n    this.clearDepth = !!props.clearDepth;\n    this.blend = !!props.blend;\n  }\n\n  componentDidMount() {\n    this.load();\n\n    let { autoPlay = true } = this.props;\n    this.cb = timeDelta => {\n      fake.timeDelta = timeDelta;\n      if(this.isPlay && this.isLoaded) {\n        fake.refresh();\n      }\n    }\n    let fake = this.ref.fake;\n    fake.playbackRate = this.__playbackRate;\n    if(autoPlay) {\n      fake.frameAnimate(this.cb);\n    }\n  }\n\n  componentWillUnmount() {\n    const mp = this.ref.fake.mp;\n    mp && mp.destroy(true);\n  }\n\n  load() {\n    let url = this.props.url;\n    if(!url) {\n      return;\n    }\n    let request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'json';\n    request.onload = () => {\n      if(request.response) {\n        this.isLoaded = true;\n        let json = request.response;\n        // console.log('@alipay/mars-player');\n        const asset = new AssetManager( {...this.props?.loadOptions});\n        asset.loadScene(json).then(scene => {\n          this.props.onLoad?.();\n          this.playAnimation(scene);\n        });\n      }\n    };\n    request.send();\n  }\n\n  playAnimation(scene) {\n    let fake = this.ref.fake;\n    fake.scene = scene;\n    fake.playOptions = this.props?.playOptions;\n    // 第一帧强制显示\n    fake.refresh();\n  }\n\n  render() {\n    return <div>\n      <$ ref=\"fake\" style={{\n        width: '100%',\n        height: '100%',\n        fill: 'none',\n        stroke: 0,\n      }}/>\n    </div>;\n  }\n\n  play(start) {\n    const cb = () => {\n      let comp = this.ref.fake.composition;\n      if (comp) {\n        this.ref.fake.removeFrameAnimate(cb);\n        this.pause();\n        comp.restart();\n        comp.update(start ?? 0);\n        this.resume();\n      }\n    }\n    this.ref.fake.frameAnimate(cb);\n  }\n\n  pause() {\n    this.ref.fake.removeFrameAnimate(this.cb);\n  }\n\n  resume() {\n    this.ref.fake.frameAnimate(this.cb);\n  }\n\n  get playbackRate() {\n    return this.__playbackRate;\n  }\n\n  set playbackRate(v) {\n    v = parseFloat(v) ?? 1;\n    // if(v <= 0) {\n    //   v = 1;\n    // }\n    this.__playbackRate = v;\n    if (this.ref.fake) {\n      this.ref.fake.playbackRate = v;\n    }\n  }\n}\n\nMars.version = version;\n\nexport default Mars;\n"],"names":["_window$mars","window","mars","MarsPlayer","AssetManager","Material","glContext","Composition","_karas$refresh","karas","refresh","CACHE","level","drawTextureCache","webgl","calRectPoint","math","matrix","isNil","util","_karas$mode","mode","CANVAS","WEBGL","inject","r2d","Math","PI","vertexSimple","fragmentSimple","mapRange","p","min","max","$","_karas$Geom","_inherits","tagName","props","_this","call","_defineProperty","_assertThisInitialized","_createClass","key","value","render","renderMode","ctx","dx","dy","_this2","res","_get","_getPrototypeOf","prototype","root","__root","__renderMode","scene","gl","mp","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","manualRender","gpu","gpuCapability","renderState","renderer","pipelineContext","defaultMtl","create","name","shader","vertex","fragment","blending","blendFunction","ONE","ONE_MINUS_SRC_ALPHA","depthMask","depthTest","culling","cullFace","CCW","stencilTest","polygonOffsetFill","polygonOffset","bindFramebuffer","FRAMEBUFFER","host","blend","disable","BLEND","flipY","getParameter","UNPACK_FLIP_Y_WEBGL","premultiply","program","CURRENT_PROGRAM","activeTexIndex","ACTIVE_TEXTURE","originTexture","TEXTURE_BINDING_2D","composition","initialize","_objectSpread","handleEnd","keepResource","willReverseTime","playOptions","width","getWidth","height","getHeight","shaderLibrary","getShaderLibrary","onComp","start","bindTexture","TEXTURE_2D","activeTexture","useProgram","textures","comp","isDestroyed","paused","_updateTransform","_updateComposition","bit","STENCIL_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clear","renderRenderFrame","renderFrame","_reset","parent","domParent","project3DPoint","camera","scaleX","getStyle","scaleY","rotateZ","env","rootTransform","setTransform","scale","shouldRestart","restart","update","shouldDestroy","dt","timeDelta","playbackRate","enable","blendFunc","aliasRenderState","mtl","marsRenderState","reset","setupStates","glCapabilityCache","TEXTURE0","z","arguments","length","undefined","x1","x","y1","y","translateX","translateY","pos","position","pw","ph","fov","tan","depth","clipMode","Geom","Mars","_karas$Component","_props$playbackRate","_this3","isPlay","autoPlay","__playbackRate","componentDidMount","_this4","load","_this$props$autoPlay","cb","fake","isLoaded","ref","frameAnimate","componentWillUnmount","destroy","_this5","url","request","XMLHttpRequest","open","responseType","onload","response","_this5$props","json","asset","loadOptions","loadScene","then","_this5$props$onLoad","_this5$props2","onLoad","playAnimation","send","_this$props","createElement","style","fill","stroke","play","_this6","removeFrameAnimate","pause","resume","get","set","v","_parseFloat","parseFloat","Component","version"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGA,IAAAA,YAAA,GAAoEC,MAAM,CAACC,IAAI;IAAtEC,UAAU,GAAAH,YAAA,CAAVG,UAAU;IAACC,YAAY,GAAAJ,YAAA,CAAZI,YAAY;IAACC,QAAQ,GAAAL,YAAA,CAARK,QAAQ;IAACC,SAAS,GAAAN,YAAA,CAATM,SAAS;IAACC,WAAW,GAAAP,YAAA,CAAXO,WAAW,CAAA;AAE/D,MAAAC,cAAA,GAsBIC,yBAAK,CArBPC,OAAO,CAAA;EAEHC,EAAKH,cAAA,CADPI,KAAK,CACHD,KAAK,CAAA;EAGLE,EAAgBL,cAAA,CADlBM,KAAK,CACHD,gBAAgB,CAAA;EAKhBE,EAWFN,yBAAK,CAbPO,IAAI,CACFC,MAAM,CACJF,YAAY,CAAA;EAIdG,EAOAT,yBAAK,CARPU,IAAI,CACFD,KAAK,CAAA;QAAAE,WAAA,GAOLX,yBAAK,CALPY,IAAI,CAAA;IACID,WAAA,CAANE,MAAM,CAAA;QACNC,KAAK,GAAAH,WAAA,CAALG,KAAK,CAAA;IAGLd,yBAAK,CADPe,OAAM;EAGR,IAAMC,GAAG,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE,CAAA;EAEzB,IAAMC,YAAY,GAIjB,gGAAA,CAAA;EACD,IAAMC,cAAc,GAGnB,mEAAA,CAAA;EAED,SAASC,QAAQA,CAACC,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC7B,EAAA,OAAOF,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGC,GAAG,GAAG,CAACC,GAAG,GAAGD,GAAG,IAAID,CAAC,CAAA;EAC5C,CAAA;EAAC,IAEKG,CAAC,0BAAAC,WAAA,EAAA;IAAAC,SAAA,CAAAF,CAAA,EAAAC,WAAA,CAAA,CAAA;EAOL,EAAA,SAAAD,CAAYG,CAAAA,OAAO,EAAEC,KAAK,EAAE;EAAA,IAAA,IAAAC,KAAA,CAAA;MAC1BA,KAAA,GAAAJ,WAAA,CAAAK,IAAA,OAAMH,OAAO,EAAEC,KAAK,CAAC,IAAA,IAAA,CAAA;EAACG,IAAAA,eAAA,CAAAC,sBAAA,CAAAH,KAAA,YAPhB,IAAI,CAAA,CAAA;EAAAE,IAAAA,eAAA,CAAAC,sBAAA,CAAAH,KAAA,kBACE,IAAI,CAAA,CAAA;EAAAE,IAAAA,eAAA,CAAAC,sBAAA,CAAAH,KAAA,SACb,IAAI,CAAA,CAAA;EAAAE,IAAAA,eAAA,CAAAC,sBAAA,CAAAH,KAAA,gBACG,CAAC,CAAA,CAAA;EAAAE,IAAAA,eAAA,CAAAC,sBAAA,CAAAH,KAAA,mBACE,CAAC,CAAA,CAAA;EAAA,IAAA,OAAAA,KAAA,CAAA;EAIhB,GAAA;EAACI,EAAAA,YAAA,CAAAT,CAAA,EAAA,CAAA;MAAAU,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAC,MAAAA,CAAOC,UAAU,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAAA,MAAA,IAAAC,MAAA,GAAA,IAAA,CAAA;EAC9B,MAAA,IAAIC,GAAG,GAAAC,IAAA,CAAAC,eAAA,CAAApB,CAAA,CAAAqB,SAAA,mBAAAf,IAAA,CAAA,IAAA,EAAgBO,UAAU,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAAA;QAC/C,IAAGE,GAAG,SAAM,EAAE;EACZ,QAAA,OAAOA,GAAG,CAAA;EACZ,OAAA;EACA,MAAA,IAAII,IAAI,GAAG,IAAI,CAACC,MAAM,CAAA;QACtB,IAAGV,UAAU,KAAKS,IAAI,CAACE,YAAY,IAAIX,UAAU,KAAKxB,KAAK,EAAE;EAC3D,QAAA,OAAO6B,GAAG,CAAA;EACZ,OAAA;EACA,MAAA,IAAIO,KAAK,GAAG,IAAI,CAACA,KAAK,CAAA;QACtB,IAAIC,EAAE,GAAGZ,GAAG,CAAA;EACZ,MAAA,IAAGW,KAAK,EAAE;EACR,QAAA,IAAIE,EAAE,GAAG,IAAI,CAACA,EAAE,CAAA;UAChB,IAAG,CAACA,EAAE,EAAE;YACND,EAAE,CAACE,WAAW,CAACF,EAAE,CAACG,8BAA8B,EAAE,KAAK,CAAC,CAAA;EACxDF,UAAAA,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI1D,UAAU,CAAC;EAC5ByD,YAAAA,EAAE,EAAFA,EAAE;EACFI,YAAAA,YAAY,EAAE,IAAA;EAChB,WAAC,CAAC,CAAA;EACF,UAAA,IAAI,CAACC,GAAG,GAAGJ,EAAE,CAACK,aAAa,CAAA;YAC3B,IAAI,CAACC,WAAW,GAAGN,EAAE,CAACO,QAAQ,CAACC,eAAe,CAACT,EAAE,CAAA;EACjD,UAAA,IAAI,CAACU,UAAU,GAAGjE,QAAQ,CAACkE,MAAM,CAAC;EAChCC,YAAAA,IAAI,EAAE,QAAQ;EACdC,YAAAA,MAAM,EAAE;EACNC,cAAAA,MAAM,EAAE9C,YAAY;EACpB+C,cAAAA,QAAQ,EAAE9C,cAAAA;EACZ,aAAA;EACF,WAAC,CAAC,CAAA;EACF,UAAA,IAAI,CAACyC,UAAU,CAACM,QAAQ,GAAG,IAAI,CAAA;YAC/B,IAAI,CAACN,UAAU,CAACO,aAAa,GAAG,CAACjB,EAAE,CAACkB,GAAG,EAAClB,EAAE,CAACmB,mBAAmB,EAACnB,EAAE,CAACkB,GAAG,EAAClB,EAAE,CAACmB,mBAAmB,CAAC,CAAA;EAC7F,UAAA,IAAI,CAACT,UAAU,CAACU,SAAS,GAAG,IAAI,CAAA;EAChC,UAAA,IAAI,CAACV,UAAU,CAACW,SAAS,GAAG,IAAI,CAAA;EAChC,UAAA,IAAI,CAACX,UAAU,CAACY,OAAO,GAAG,KAAK,CAAA;EAC/B,UAAA,IAAI,CAACZ,UAAU,CAACa,QAAQ,GAAGvB,EAAE,CAACwB,GAAG,CAAA;EACjC,UAAA,IAAI,CAACd,UAAU,CAACe,WAAW,GAAG,KAAK,CAAA;EACnC,UAAA,IAAI,CAACf,UAAU,CAACgB,iBAAiB,GAAG,KAAK,CAAA;YACzC,IAAI,CAAChB,UAAU,CAACiB,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEtC,IAAI,CAACpB,WAAW,CAACqB,eAAe,CAAC5B,EAAE,CAAC6B,WAAW,EAAE,IAAI,CAAC,CAAA;YACtD,IAAI,CAACtB,WAAW,CAACL,WAAW,CAACF,EAAE,CAACG,8BAA8B,EAAE,CAAC,CAAC,CAAA;EAElE,UAAA,IAAG,CAAC,IAAI,CAAC2B,IAAI,CAACC,KAAK,EAAE;cACnB,IAAI,CAACxB,WAAW,CAACyB,OAAO,CAACtF,SAAS,CAACuF,KAAK,CAAC,CAAA;EAC3C,WAAA;YACA,IAAIC,KAAK,GAAGlC,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAACoC,mBAAmB,CAAC,CAAA;YACnD,IAAIC,WAAW,GAAGrC,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAACG,8BAA8B,CAAC,CAAA;YACpE,IAAImC,OAAO,GAAGtC,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAACuC,eAAe,CAAC,CAAA;YACjDvC,EAAE,CAACE,WAAW,CAACF,EAAE,CAACG,8BAA8B,EAAE,KAAK,CAAC,CAAA;YACxD,IAAIqC,cAAc,GAAGxC,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAACyC,cAAc,CAAC,CAAA;YACvD,IAAIC,aAAa,GAAG1C,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAAC2C,kBAAkB,CAAC,CAAA;EAC1D,UAAA,IAAMnC,SAAQ,GAAGP,EAAE,CAACO,QAAQ,CAAA;EAC5B,UAAA,IAAIoC,WAAW,GAAG,IAAI,CAACA,WAAW,GAAGjG,WAAW,CAACkG,UAAU,CAAC9C,KAAK,EAAA+C,cAAA,CAAAA,cAAA,CAAA;EAC/DC,YAAAA,SAAS,EAAE,SAAAA,SAAA,GAAM,EAAE;EACnBC,YAAAA,YAAY,EAAE,KAAK;EACnBC,YAAAA,eAAe,EAAE,KAAA;aACd,EAAA,IAAI,CAACC,WAAW,CAAA,EAAA,EAAA,EAAA;EACnB1C,YAAAA,QAAQ,EAARA,SAAQ;EACR2C,YAAAA,KAAK,EAAE3C,SAAQ,CAAC4C,QAAQ,EAAE;EAC1BC,YAAAA,MAAM,EAAE7C,SAAQ,CAAC8C,SAAS,EAAE;EAC5BC,YAAAA,aAAa,EAAE/C,SAAQ,CAACgD,gBAAgB,EAAC;EAAC,WAAA,CAC3C,CAAC,CAAA;EACF,UAAA,IAAIC,MAAM,GAAG,SAATA,MAAMA,GAAS;cACjBb,WAAW,CAACc,KAAK,EAAE,CAAA;EACnB,YAAA,IAAIhB,aAAa,EAAE;gBACjB1C,EAAE,CAAC2D,WAAW,CAAC3D,EAAE,CAAC4D,UAAU,EAAElB,aAAa,CAAC,CAAA;EAC9C,aAAA;EACA1C,YAAAA,EAAE,CAAC6D,aAAa,CAACrB,cAAc,CAAC,CAAA;cAChCjD,MAAI,CAACgB,WAAW,CAACL,WAAW,CAACF,EAAE,CAACG,8BAA8B,EAAE,CAACkC,WAAW,CAAC,CAAA;cAC7E9C,MAAI,CAACgB,WAAW,CAACL,WAAW,CAACF,EAAE,CAACoC,mBAAmB,EAAE,CAACF,KAAK,CAAC,CAAA;EAC5D3C,YAAAA,MAAI,CAACgB,WAAW,CAACuD,UAAU,CAAC,IAAI,CAAC,CAAA;EACjC9D,YAAAA,EAAE,CAAC8D,UAAU,CAACxB,OAAO,CAAC,CAAA;EACtBvC,YAAAA,KAAK,CAACgE,QAAQ,GAAG,KAAK,CAAC,CAAA;aACxB,CAAA;EACDN,UAAAA,MAAM,EAAE,CAAA;EACV,SAAA;EACA,QAAA,IAAIO,IAAI,GAAG,IAAI,CAACpB,WAAW,CAAA;EAC3B,QAAA,IAAIpC,QAAQ,GAAGwD,IAAI,IAAIA,IAAI,CAACxD,QAAQ,CAAA;UACpC,IAAGA,QAAQ,IAAI,CAACA,QAAQ,CAACyD,WAAW,IAAI,CAAChE,EAAE,CAACiE,MAAM,EAAE;YAClD,IAAI,CAACC,gBAAgB,EAAE,CAAA;YACvB,IAAI,CAACC,kBAAkB,EAAE,CAAA;EACzB,UAAA,IAAIC,GAAG,GAAG3H,SAAS,CAAC4H,kBAAkB,CAAA;EACtC,UAAA,IAAG,IAAI,CAACxC,IAAI,CAACyC,UAAU,EAAE;EACvBF,YAAAA,GAAG,GAAGA,GAAG,GAAG3H,SAAS,CAAC8H,gBAAgB,CAAA;EACxC,WAAA;EACA,UAAA,IAAI,CAACjE,WAAW,CAACkE,KAAK,CAACJ,GAAG,CAAC,CAAA;EAC3B7D,UAAAA,QAAQ,CAACkE,iBAAiB,CAACV,IAAI,CAACW,WAAW,CAAC,CAAA;EAC9C,SAAA;EACA,QAAA,IAAI,CAACC,MAAM,CAACxF,GAAG,CAAC,CAAA;EAClB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAAJ,GAAA,EAAA,kBAAA;MAAAC,KAAA,EAED,SAAAkF,gBAAAA,GAAmB;EACjB,MAAA,IAAIU,MAAM,GAAG,IAAI,CAACC,SAAS,CAAA;EAC3B,MAAA,IAAId,IAAI,GAAG,IAAI,CAACpB,WAAW,CAAA;QACf,IAAI,CAACmC,cAAc,CAACf,IAAI,CAACgB,MAAM,EAAC;EAC5C,MAAA,IAAIC,MAAM,GAAGJ,MAAM,CAACK,QAAQ,CAAC,QAAQ,CAAC,CAAA;EACpCC,QAAAA,MAAM,GAAGN,MAAM,CAACK,QAAQ,CAAC,QAAQ,CAAC,CAAA;EAClCE,QAAUP,MAAM,CAACK,QAAQ,CAAC,SAAS,EAAC;EACtC,MAAU,IAAI,CAACG,IAAG;EAClBrB,MAAAA,IAAI,CAACsB,aAAa,CAACC,YAAY,CAAC;EAC9B;EACAC,QAAAA,KAAK,EAAE,CAACP,MAAM,EAAEE,MAAM,EAAE,CAAC,CAAA;EACzB;EACF,OAAC,CAAC,CAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAnG,GAAA,EAAA,oBAAA;MAAAC,KAAA,EAED,SAAAmF,kBAAAA,GAAqB;EACnB,MAAA,IAAIJ,IAAI,GAAG,IAAI,CAACpB,WAAW,CAAA;EAC3B,MAAA,IAAGoB,IAAI,CAACyB,aAAa,EAAE,EAAE;UACvBzB,IAAI,CAAC0B,OAAO,EAAE,CAAA;EACd1B,QAAAA,IAAI,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAAA;EAChB,OAAC,MACI,IAAG,CAAC3B,IAAI,CAAC4B,aAAa,EAAE;EAC3B,QAAA,IAAIC,EAAE,GAAG/H,IAAI,CAACM,GAAG,CAAC,IAAI,CAAC0H,SAAS,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAACC,YAAY,CAAA;EAC9D/B,QAAAA,IAAI,CAAC2B,MAAM,CAACE,EAAE,CAAC,CAAA;EACjB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAA7G,GAAA,EAAA,QAAA;EAAAC,IAAAA,KAAA,EAED,SAAA2F,MAAO5E,CAAAA,EAAE,EAAE;EACTA,MAAAA,EAAE,CAAC8D,UAAU,CAAC9D,EAAE,CAACsC,OAAO,CAAC,CAAA;EACzBtC,MAAAA,EAAE,CAACgG,MAAM,CAAChG,EAAE,CAACiC,KAAK,CAAC,CAAA;QACnBjC,EAAE,CAACiG,SAAS,CAACjG,EAAE,CAACkB,GAAG,EAAElB,EAAE,CAACmB,mBAAmB,CAAC,CAAA;QAC5CnB,EAAE,CAACE,WAAW,CAACF,EAAE,CAACoC,mBAAmB,EAAE,CAAC,CAAC,CAAA;QACzCpC,EAAE,CAACE,WAAW,CAACF,EAAE,CAACG,8BAA8B,EAAE,IAAI,CAAC,CAAA;QACvD,IAAI,CAAC+F,gBAAgB,EAAE,CAAA;EACzB,KAAA;EAAC,GAAA,EAAA;MAAAlH,GAAA,EAAA,kBAAA;MAAAC,KAAA,EAED,SAAAiH,gBAAAA,GAAmB;EACjB,MAAA,IAAIC,GAAG,GAAG,IAAI,CAACzF,UAAU,CAAA;QACzB,IAAI0F,eAAe,GAAG,IAAI,CAACnG,EAAE,CAACO,QAAQ,CAACC,eAAe,CAAA;QAEtD,IAAG0F,GAAG,IAAIC,eAAe,EAAE;UACzBA,eAAe,CAACC,KAAK,EAAE,CAAA;EACvBF,QAAAA,GAAG,CAACG,WAAW,CAACF,eAAe,CAAC,CAAA;EAChC,QAAA,OAAOA,eAAe,CAACG,iBAAiB,CAAC7J,SAAS,CAACuF,KAAK,CAAC,CAAA;EACzDmE,QAAAA,eAAe,CAAChF,SAAS,CAAC,KAAK,CAAC,CAAA;EAChCgF,QAAAA,eAAe,CAACvC,aAAa,CAACnH,SAAS,CAAC8J,QAAQ,CAAC,CAAA;EACnD,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAAxH,GAAA,EAAA,gBAAA;EAAAC,IAAAA,KAAA,EAED,SAAA8F,cAAeC,CAAAA,MAAM,EAAS;EAAA,MAAA,IAAPyB,CAAC,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,CAAC,CAAA;EAC1B,MAAA,IAAI7B,MAAM,GAAG,IAAI,CAACC,SAAS,CAAA;EAC3B,MAAA,IAAI+B,EAAE,GAAG,IAAI,CAACC,CAAC;UAAEC,EAAE,GAAG,IAAI,CAACC,CAAC;EAC1BC,QAAAA,UAAU,GAAGpC,MAAM,CAACK,QAAQ,CAAC,YAAY,CAAC;EAC1CgC,QAAAA,UAAU,GAAGrC,MAAM,CAACK,QAAQ,CAAC,YAAY,CAAC,CAAA;EAC5C,MAAA,IAAIiC,GAAG,GAAGnC,MAAM,CAACoC,QAAQ,CAAA;EACzB,MAAA,IAAIC,EAAE,GAAG,IAAI,CAAClE,KAAK;UAAEmE,EAAE,GAAG,IAAI,CAACjE,MAAM,CAAA;EACrC,MAAA,IAAIkE,GAAG,GAAGzJ,IAAI,CAAC0J,GAAG,CAACxC,MAAM,CAACuC,GAAG,GAAG1J,GAAG,GAAG,CAAC,CAAC,CAAA;EACxC,MAAA,IAAI4J,KAAK,GAAGN,GAAG,CAAC,CAAC,CAAC,GAAGV,CAAC,CAAA;QACtB,IAAItD,KAAK,EAAEE,MAAM,CAAA;QACjB,IAAG2B,MAAM,CAAC0C,QAAQ,EAAE;UAClBvE,KAAK,GAAGoE,GAAG,GAAGE,KAAK,CAAA;EACnBpE,QAAAA,MAAM,GAAGF,KAAK,GAAGmE,EAAE,GAAGD,EAAE,CAAA;EAC1B,OAAC,MACI;UACHhE,MAAM,GAAGkE,GAAG,GAAGE,KAAK,CAAA;EACpBtE,QAAAA,KAAK,GAAGE,MAAM,GAAGgE,EAAE,GAAGC,EAAE,CAAA;EAC1B,OAAA;EACA,MAAA,IAAIR,CAAC,GAAG,CAACD,EAAE,GAAGI,UAAU,IAAII,EAAE,CAAA;EAC9B,MAAA,IAAIL,CAAC,GAAG,CAACD,EAAE,GAAGG,UAAU,IAAII,EAAE,CAAA;EAC9B,MAAA,OAAO,CAACpJ,QAAQ,CAAC4I,CAAC,EAAE,CAAC3D,KAAK,EAAEA,KAAK,CAAC,GAAGgE,GAAG,CAAC,CAAC,CAAC,EAAEjJ,QAAQ,CAAC8I,CAAC,EAAE,CAAC3D,MAAM,EAAEA,MAAM,CAAC,GAAG8D,GAAG,CAAC,CAAC,CAAC,EAAEV,CAAC,CAAC,CAAA;EACxF,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAnI,CAAA,CAAA;EAAA,CA5KazB,CAAAA,yBAAK,CAAC8K,IAAI,CAAA,CAAA;AA+KpBC,MAAAA,IAAI,0BAAAC,gBAAA,EAAA;IAAArJ,SAAA,CAAAoJ,IAAA,EAAAC,gBAAA,CAAA,CAAA;IAOR,SAAAD,IAAAA,CAAYlJ,KAAK,EAAE;EAAA,IAAA,IAAAoJ,mBAAA,CAAA;EAAA,IAAA,IAAAC,MAAA,CAAA;EACjBA,IAAAA,MAAA,GAAAF,gBAAA,CAAAjJ,IAAA,CAAA,IAAA,EAAMF,KAAK,CAAC,IAAA,IAAA,CAAA;EAACG,IAAAA,eAAA,CAAAC,sBAAA,CAAAiJ,MAAA,aAPN,KAAK,CAAA,CAAA;EAAAlJ,IAAAA,eAAA,CAAAC,sBAAA,CAAAiJ,MAAA,eACH,KAAK,CAAA,CAAA;EAAAlJ,IAAAA,eAAA,CAAAC,sBAAA,CAAAiJ,MAAA,qBACC,CAAC,CAAA,CAAA;EAAAlJ,IAAAA,eAAA,CAAAC,sBAAA,CAAAiJ,MAAA,iBACL,KAAK,CAAA,CAAA;EAAAlJ,IAAAA,eAAA,CAAAC,sBAAA,CAAAiJ,MAAA,YACV,KAAK,CAAA,CAAA;EAKXA,IAAAA,MAAA,CAAKC,MAAM,GAAGtJ,KAAK,CAACuJ,QAAQ,KAAK,KAAK,CAAA;EACtCF,IAAAA,MAAA,CAAKG,cAAc,GAAAJ,CAAAA,mBAAA,GAAGpJ,KAAK,CAACqH,YAAY,MAAA+B,IAAAA,IAAAA,mBAAA,KAAAA,KAAAA,CAAAA,GAAAA,mBAAA,GAAI,CAAC,CAAA;EAC7CC,IAAAA,MAAA,CAAKxD,UAAU,GAAG,CAAC,CAAC7F,KAAK,CAAC6F,UAAU,CAAA;EACpCwD,IAAAA,MAAA,CAAKhG,KAAK,GAAG,CAAC,CAACrD,KAAK,CAACqD,KAAK,CAAA;EAAC,IAAA,OAAAgG,MAAA,CAAA;EAC7B,GAAA;EAAChJ,EAAAA,YAAA,CAAA6I,IAAA,EAAA,CAAA;MAAA5I,GAAA,EAAA,mBAAA;MAAAC,KAAA,EAED,SAAAkJ,iBAAAA,GAAoB;EAAA,MAAA,IAAAC,MAAA,GAAA,IAAA,CAAA;QAClB,IAAI,CAACC,IAAI,EAAE,CAAA;EAEX,MAAA,IAAAC,oBAAA,GAA0B,IAAI,CAAC5J,KAAK,CAA9BuJ,QAAQ;EAARA,QAAAA,QAAQ,GAAAK,oBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,oBAAA,CAAA;EACrB,MAAA,IAAI,CAACC,EAAE,GAAG,UAAAzC,SAAS,EAAI;UACrB0C,IAAI,CAAC1C,SAAS,GAAGA,SAAS,CAAA;EAC1B,QAAA,IAAGsC,MAAI,CAACJ,MAAM,IAAII,MAAI,CAACK,QAAQ,EAAE;YAC/BD,IAAI,CAAC1L,OAAO,EAAE,CAAA;EAChB,SAAA;SACD,CAAA;EACD,MAAA,IAAI0L,IAAI,GAAG,IAAI,CAACE,GAAG,CAACF,IAAI,CAAA;EACxBA,MAAAA,IAAI,CAACzC,YAAY,GAAG,IAAI,CAACmC,cAAc,CAAA;EACvC,MAAA,IAAGD,QAAQ,EAAE;EACXO,QAAAA,IAAI,CAACG,YAAY,CAAC,IAAI,CAACJ,EAAE,CAAC,CAAA;EAC5B,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAAvJ,GAAA,EAAA,sBAAA;MAAAC,KAAA,EAED,SAAA2J,oBAAAA,GAAuB;QACrB,IAAM3I,EAAE,GAAG,IAAI,CAACyI,GAAG,CAACF,IAAI,CAACvI,EAAE,CAAA;EAC3BA,MAAAA,EAAE,IAAIA,EAAE,CAAC4I,OAAO,CAAC,IAAI,CAAC,CAAA;EACxB,KAAA;EAAC,GAAA,EAAA;MAAA7J,GAAA,EAAA,MAAA;MAAAC,KAAA,EAED,SAAAoJ,IAAAA,GAAO;EAAA,MAAA,IAAAS,MAAA,GAAA,IAAA,CAAA;EACL,MAAA,IAAIC,GAAG,GAAG,IAAI,CAACrK,KAAK,CAACqK,GAAG,CAAA;QACxB,IAAG,CAACA,GAAG,EAAE;EACP,QAAA,OAAA;EACF,OAAA;EACA,MAAA,IAAIC,OAAO,GAAG,IAAIC,cAAc,EAAE,CAAA;QAClCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAEH,GAAG,EAAE,IAAI,CAAC,CAAA;QAC9BC,OAAO,CAACG,YAAY,GAAG,MAAM,CAAA;QAC7BH,OAAO,CAACI,MAAM,GAAG,YAAM;UACrB,IAAGJ,OAAO,CAACK,QAAQ,EAAE;EAAA,UAAA,IAAAC,YAAA,CAAA;YACnBR,MAAI,CAACL,QAAQ,GAAG,IAAI,CAAA;EACpB,UAAA,IAAIc,IAAI,GAAGP,OAAO,CAACK,QAAQ,CAAA;EAC3B;EACA,UAAA,IAAMG,KAAK,GAAG,IAAIhN,YAAY,CAAAsG,cAAA,MAAAwG,YAAA,GAAMR,MAAI,CAACpK,KAAK,cAAA4K,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,YAAA,CAAYG,WAAW,CAAC,CAAC,CAAA;YAC7DD,KAAK,CAACE,SAAS,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,UAAA5J,KAAK,EAAI;cAAA,IAAA6J,mBAAA,EAAAC,aAAA,CAAA;EAClC,YAAA,CAAAD,mBAAA,GAAAC,CAAAA,aAAA,GAAAf,MAAI,CAACpK,KAAK,EAACoL,MAAM,MAAA,IAAA,IAAAF,mBAAA,KAAjBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAAhL,IAAA,CAAAiL,aAAoB,CAAC,CAAA;EACrBf,YAAAA,MAAI,CAACiB,aAAa,CAAChK,KAAK,CAAC,CAAA;EAC3B,WAAC,CAAC,CAAA;EACJ,SAAA;SACD,CAAA;QACDiJ,OAAO,CAACgB,IAAI,EAAE,CAAA;EAChB,KAAA;EAAC,GAAA,EAAA;MAAAhL,GAAA,EAAA,eAAA;EAAAC,IAAAA,KAAA,EAED,SAAA8K,aAAchK,CAAAA,KAAK,EAAE;EAAA,MAAA,IAAAkK,WAAA,CAAA;EACnB,MAAA,IAAIzB,IAAI,GAAG,IAAI,CAACE,GAAG,CAACF,IAAI,CAAA;QACxBA,IAAI,CAACzI,KAAK,GAAGA,KAAK,CAAA;EAClByI,MAAAA,IAAI,CAACtF,WAAW,GAAA+G,CAAAA,WAAA,GAAG,IAAI,CAACvL,KAAK,MAAAuL,IAAAA,IAAAA,WAAA,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,WAAA,CAAY/G,WAAW,CAAA;EAC1C;QACAsF,IAAI,CAAC1L,OAAO,EAAE,CAAA;EAChB,KAAA;EAAC,GAAA,EAAA;MAAAkC,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAC,MAAAA,GAAS;QACP,OAAOrC,yBAAA,CAAAqN,aAAA,CAAA,KAAA,EAAA,IAAA,EACLrN,yBAAA,CAAAqN,aAAA,CAAC5L,CAAC,EAAA;EAACoK,QAAAA,GAAG,EAAC,MAAM;EAACyB,QAAAA,KAAK,EAAE;EACnBhH,UAAAA,KAAK,EAAE,MAAM;EACbE,UAAAA,MAAM,EAAE,MAAM;EACd+G,UAAAA,IAAI,EAAE,MAAM;EACZC,UAAAA,MAAM,EAAE,CAAA;EACV,SAAA;EAAE,OAAC,CACA,CAAC,CAAA;EACR,KAAA;EAAC,GAAA,EAAA;MAAArL,GAAA,EAAA,MAAA;EAAAC,IAAAA,KAAA,EAED,SAAAqL,IAAK5G,CAAAA,KAAK,EAAE;EAAA,MAAA,IAAA6G,MAAA,GAAA,IAAA,CAAA;EACV,MAAA,IAAMhC,EAAE,GAAG,SAALA,EAAEA,GAAS;UACf,IAAIvE,IAAI,GAAGuG,MAAI,CAAC7B,GAAG,CAACF,IAAI,CAAC5F,WAAW,CAAA;EACpC,QAAA,IAAIoB,IAAI,EAAE;YACRuG,MAAI,CAAC7B,GAAG,CAACF,IAAI,CAACgC,kBAAkB,CAACjC,EAAE,CAAC,CAAA;YACpCgC,MAAI,CAACE,KAAK,EAAE,CAAA;YACZzG,IAAI,CAAC0B,OAAO,EAAE,CAAA;YACd1B,IAAI,CAAC2B,MAAM,CAACjC,KAAK,KAAA,IAAA,IAALA,KAAK,KAALA,KAAAA,CAAAA,GAAAA,KAAK,GAAI,CAAC,CAAC,CAAA;YACvB6G,MAAI,CAACG,MAAM,EAAE,CAAA;EACf,SAAA;SACD,CAAA;QACD,IAAI,CAAChC,GAAG,CAACF,IAAI,CAACG,YAAY,CAACJ,EAAE,CAAC,CAAA;EAChC,KAAA;EAAC,GAAA,EAAA;MAAAvJ,GAAA,EAAA,OAAA;MAAAC,KAAA,EAED,SAAAwL,KAAAA,GAAQ;QACN,IAAI,CAAC/B,GAAG,CAACF,IAAI,CAACgC,kBAAkB,CAAC,IAAI,CAACjC,EAAE,CAAC,CAAA;EAC3C,KAAA;EAAC,GAAA,EAAA;MAAAvJ,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAyL,MAAAA,GAAS;QACP,IAAI,CAAChC,GAAG,CAACF,IAAI,CAACG,YAAY,CAAC,IAAI,CAACJ,EAAE,CAAC,CAAA;EACrC,KAAA;EAAC,GAAA,EAAA;MAAAvJ,GAAA,EAAA,cAAA;MAAA2L,GAAA,EAED,SAAAA,GAAAA,GAAmB;QACjB,OAAO,IAAI,CAACzC,cAAc,CAAA;OAC3B;EAAA0C,IAAAA,GAAA,EAED,SAAAA,GAAiBC,CAAAA,CAAC,EAAE;EAAA,MAAA,IAAAC,WAAA,CAAA;EAClBD,MAAAA,CAAC,GAAAC,CAAAA,WAAA,GAAGC,UAAU,CAACF,CAAC,CAAC,MAAA,IAAA,IAAAC,WAAA,KAAA,KAAA,CAAA,GAAAA,WAAA,GAAI,CAAC,CAAA;EACtB;EACA;EACA;QACA,IAAI,CAAC5C,cAAc,GAAG2C,CAAC,CAAA;EACvB,MAAA,IAAI,IAAI,CAACnC,GAAG,CAACF,IAAI,EAAE;EACjB,QAAA,IAAI,CAACE,GAAG,CAACF,IAAI,CAACzC,YAAY,GAAG8E,CAAC,CAAA;EAChC,OAAA;EACF,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAjD,IAAA,CAAA;EAAA,CAnHgB/K,CAAAA,yBAAK,CAACmO,SAAS,EAAA;EAsHlCpD,IAAI,CAACqD,OAAO,GAAGA,OAAO;;;;;;;;"}